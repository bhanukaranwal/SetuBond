version: '3.8'

services:
  # Databases
  postgres:
    image: timescale/timescaledb:latest-pg14
    environment:
      POSTGRES_DB: setubond
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mongodb:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  # Message Broker
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # Services
  api-gateway:
    build: ./services/gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    depends_on:
      - postgres
      - redis
      - kafka

  user-service:
    build: ./services/user-service
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - mongodb

  trading-service:
    build: ./services/trading-service
    ports:
      - "3002:3002"
    depends_on:
      - postgres
      - redis
      - kafka

  data-service:
    build: ./services/data-service
    ports:
      - "3003:3003"
    depends_on:
      - postgres
      - redis

  ai-service:
    build: ./services/ai-service
    ports:
      - "3004:3004"
    depends_on:
      - postgres
      - redis

  blockchain-service:
    build: ./services/blockchain-service
    ports:
      - "3005:3005"
    depends_on:
      - postgres

  notification-service:
    build: ./services/notification-service
    ports:
      - "3006:3006"
    depends_on:
      - redis
      - kafka

  compliance-service:
    build: ./services/compliance-service
    ports:
      - "3007:3007"
    depends_on:
      - postgres
      - mongodb

  # Frontend
  frontend:
    build: ./frontend
    ports:
      - "3008:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3000

volumes:
  postgres_data:
  mongodb_data:
